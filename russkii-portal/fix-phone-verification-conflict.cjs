const sqlite3 = require('sqlite3').verbose();
const path = require('path');

// –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const DB_PATH = path.join(__dirname, 'db', 'database.sqlite');

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
console.log('üìÅ –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', DB_PATH);

const USER_EMAIL = 'admin@primeballoons.ru';
const USER_PHONE = '+79920793424';

function fixPhoneVerificationConflict() {
  const db = new sqlite3.Database(DB_PATH, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', err.message);
      return;
    }
  });

  console.log(`\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${USER_EMAIL}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  db.get('SELECT * FROM users WHERE email = ?', [USER_EMAIL], (err, user) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', err.message);
      db.close();
      return;
    }

    if (!user) {
      console.log(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${USER_EMAIL} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      db.close();
      return;
    }

    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${user.email}`);
    console.log(`üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone}`);
    console.log(`‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${user.phone_verified ? '–î–ê' : '–ù–ï–¢'}`);

    if (user.phone_verified) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, —É–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ pending_registrations
      console.log(`\nüßπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –û—á–∏—â–∞–µ–º pending_registrations...`);
      
      db.run('DELETE FROM pending_registrations WHERE phone = ?', [user.phone], function(err) {
        if (err) {
          console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ pending_registrations:', err.message);
        } else {
          console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${this.changes} –∑–∞–ø–∏—Å–µ–π –∏–∑ pending_registrations –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ${user.phone}`);
        }
        
        // –¢–∞–∫–∂–µ —É–¥–∞–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        if (user.phone_verification_token) {
          db.run('UPDATE users SET phone_verification_token = NULL WHERE id = ?', [user.id], function(err2) {
            if (err2) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ç–æ–∫–µ–Ω–∞:', err2.message);
            } else {
              console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—á–∏—â–µ–Ω');
            }
            
            console.log('\nüéâ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç.');
            db.close();
          });
        } else {
          console.log('\nüéâ –ö–æ–Ω—Ñ–ª–∏–∫—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç.');
          db.close();
        }
      });
    } else {
      console.log('\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è.');
      db.close();
    }
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
fixPhoneVerificationConflict(); 