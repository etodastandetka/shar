const Database = require('better-sqlite3');
const path = require('path');

console.log('üöÄ –ë–´–°–¢–†–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PHONE VERIFICATION');
console.log('==========================================');

try {
  const dbPath = path.join(__dirname, 'db', 'database.sqlite');
  const db = new Database(dbPath);
  
  // 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ pending registrations
  console.log('\nüìã –í—Å–µ pending registrations:');
  const pending = db.prepare('SELECT * FROM pending_registrations ORDER BY created_at DESC').all();
  
  if (pending.length === 0) {
    console.log('‚ùå –ù–µ—Ç pending registrations!');
    console.log('üí° –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –ª–∏–±–æ:');
    console.log('   - –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è');
    console.log('   - –ó–∞–ø–∏—Å–∏ —É–¥–∞–ª—è—é—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è');
    console.log('   - –ü—Ä–æ–±–ª–µ–º–∞ —Å savePendingRegistration —Ñ—É–Ω–∫—Ü–∏–µ–π');
  } else {
    pending.forEach((record, index) => {
      console.log(`\n${index + 1}. –ó–∞–ø–∏—Å—å ID: ${record.id}`);
      console.log(`   üì± Phone: "${record.phone}"`);
      console.log(`   üîë Token: "${record.verification_token}"`);
      console.log(`   ‚úÖ Verified: ${record.verified ? 'YES' : 'NO'}`);
      console.log(`   üìÖ Created: ${record.created_at}`);
      
      // –ü–∞—Ä—Å–∏–º user_data
      try {
        const userData = JSON.parse(record.user_data);
        console.log(`   üë§ Email: ${userData.email}`);
        console.log(`   üìß Name: ${userData.fullName || userData.firstName + ' ' + userData.lastName}`);
      } catch (e) {
        console.log(`   üìÑ User Data: ${record.user_data.substring(0, 100)}...`);
      }
    });
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
  console.log('\nüìä –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  
  if (pending.length === 0) {
    console.log('1. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞: pm2 logs russkii-portal --lines 50');
    console.log('2. üîÑ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ —Å–∞–π—Ç–µ');
    console.log('3. üõ†Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Å–æ–±—Ä–∞–Ω —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏');
  } else {
    console.log('1. üì± –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –≤ Telegram –±–æ—Ç–µ:');
    const latestRecord = pending[0];
    console.log(`   https://t.me/InvittingToTGbotik_bot?start=${latestRecord.verification_token}`);
    console.log('2. üìû –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –±–æ—Ç—É:');
    console.log(`   ${latestRecord.phone}`);
    console.log('3. üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏: pm2 logs russkii-portal --lines 20');
  }
  
  console.log('\nüîß –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
  console.log('- –û—á–∏—Å—Ç–∏—Ç—å pending: node -e "const db=require(\'better-sqlite3\')(\'./db/database.sqlite\'); console.log(\'–£–¥–∞–ª–µ–Ω–æ:\', db.prepare(\'DELETE FROM pending_registrations WHERE verified=0\').run().changes);"');
  console.log('- –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å: pm2 stop russkii-portal && npm run build && pm2 start russkii-portal');
  console.log('- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω –≤—Ä—É—á–Ω—É—é: node test-phone-verification.cjs');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
} 