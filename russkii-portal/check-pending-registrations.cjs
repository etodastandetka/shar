const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const DB_PATH = path.join(__dirname, 'db', 'database.sqlite');
const TOKEN = 'jemniawnsydzmyi7ceufma';

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ pending_registrations –¥–ª—è —Ç–æ–∫–µ–Ω–∞:', TOKEN);
console.log('üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', DB_PATH);

const db = new sqlite3.Database(DB_PATH, (err) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:', err.message);
    return;
  }
});

db.get(
  'SELECT * FROM pending_registrations WHERE verification_token = ?',
  [TOKEN],
  (err, row) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', err.message);
    } else if (row) {
      console.log('\n‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞:');
      console.log(`   ID: ${row.id}`);
      console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${row.phone}`);
      console.log(`   –¢–æ–∫–µ–Ω: ${row.verification_token}`);
      console.log(`   –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${row.verified ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${row.created_at}`);
      try {
        const userData = JSON.parse(row.user_data);
        console.log(`   Email –∏–∑ user_data: ${userData.email}`);
      } catch (e) {
        console.log(`   User data: ${row.user_data}`);
      }
    } else {
      console.log('‚ùå –ó–∞–ø–∏—Å—å —Å —Ç–æ–∫–µ–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ pending_registrations');
    }
    
    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —ç—Ç–æ–≥–æ email
    db.all(
      `SELECT pr.*, 
       (SELECT email FROM users WHERE phone = pr.phone) as email_from_users
       FROM pending_registrations pr 
       WHERE pr.user_data LIKE '%etodastandetka@gmail.com%'`,
      [],
      (err2, rows) => {
        if (err2) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ email:', err2.message);
        } else if (rows && rows.length > 0) {
          console.log(`\nüìã –í—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è email etodastandetka@gmail.com (${rows.length}):`);
          rows.forEach((row, index) => {
            console.log(`\n   ${index + 1}. ID: ${row.id}`);
            console.log(`      –¢–µ–ª–µ—Ñ–æ–Ω: ${row.phone}`);
            console.log(`      –¢–æ–∫–µ–Ω: ${row.verification_token}`);
            console.log(`      –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${row.verified ? '–î–ê' : '–ù–ï–¢'}`);
            console.log(`      –°–æ–∑–¥–∞–Ω: ${row.created_at}`);
          });
        } else {
          console.log('\n‚ùå –ó–∞–ø–∏—Å–∏ –¥–ª—è email etodastandetka@gmail.com –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        db.close();
      }
    );
  }
); 