const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const DB_PATH = path.join(__dirname, 'db', 'database.sqlite');
const PHONE = '+79920793424';

console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
console.log('üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', DB_PATH);
console.log('üìû –¢–µ–ª–µ—Ñ–æ–Ω:', PHONE);

const db = new sqlite3.Database(DB_PATH, (err) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:', err.message);
    return;
  }
});

// –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
db.all(
  'SELECT * FROM pending_registrations WHERE phone = ?',
  [PHONE],
  (err, rows) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∑–∞–ø–∏—Å–µ–π:', err.message);
      db.close();
      return;
    }

    if (rows.length === 0) {
      console.log('‚ùå –ó–∞–ø–∏—Å–∏ –¥–ª—è –Ω–æ–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ pending_registrations');
      db.close();
      return;
    }

    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${rows.length}`);
    
    rows.forEach((row, index) => {
      console.log(`\n   ${index + 1}. ID: ${row.id}`);
      console.log(`      –¢–æ–∫–µ–Ω: ${row.verification_token}`);
      console.log(`      –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${row.verified ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`      –°–æ–∑–¥–∞–Ω: ${row.created_at}`);
      
      try {
        const userData = JSON.parse(row.user_data);
        console.log(`      Email: ${userData.email}`);
      } catch (e) {
        console.log(`      User data: ${row.user_data}`);
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∫–∞–∫ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
    db.run(
      'UPDATE pending_registrations SET verified = 1 WHERE phone = ?',
      [PHONE],
      function(err2) {
        if (err2) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', err2.message);
        } else {
          console.log(`\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${this.changes}`);
          console.log('üéâ –¢–µ–ø–µ—Ä—å —Å–∞–π—Ç –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∫–∞–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π!');
          console.log('\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:');
          console.log('   1. –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ —Å–∞–π—Ç–µ (F5)');
          console.log('   2. –ù–∞–∂–∞—Ç—å "–Ø –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –Ω–æ–º–µ—Ä" –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ');
        }
        db.close();
      }
    );
  }
); 