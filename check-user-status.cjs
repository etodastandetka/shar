const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const DB_PATH = path.join(__dirname, 'db', 'database.sqlite');
const EMAIL = 'etodastandetka@gmail.com';

console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', EMAIL);
console.log('üìÅ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', DB_PATH);

const db = new sqlite3.Database(DB_PATH, (err) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:', err.message);
    return;
  }
});

db.get(
  'SELECT id, email, phone, phone_verified, phone_verification_token, telegram_chat_id, created_at, updated_at FROM users WHERE email = ?',
  [EMAIL],
  (err, user) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', err.message);
    } else if (user) {
      console.log('\n‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:');
      console.log(`   ID: ${user.id}`);
      console.log(`   Email: ${user.email}`);
      console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${user.phone || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${user.phone_verified ? '–î–ê' : '–ù–ï–¢'}`);
      console.log(`   –¢–æ–∫–µ–Ω –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${user.phone_verification_token || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
      console.log(`   Telegram ID: ${user.telegram_chat_id || '–Ω–µ —Å–≤—è–∑–∞–Ω'}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${user.created_at}`);
      console.log(`   –û–±–Ω–æ–≤–ª–µ–Ω: ${user.updated_at}`);
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º pending_registrations
    db.get(
      'SELECT * FROM pending_registrations WHERE verification_token IS NOT NULL ORDER BY created_at DESC LIMIT 1',
      [],
      (err2, pending) => {
        if (err2) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ pending_registrations:', err2.message);
        } else if (pending) {
          console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å –≤ pending_registrations:');
          console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${pending.phone}`);
          console.log(`   –¢–æ–∫–µ–Ω: ${pending.verification_token}`);
          console.log(`   –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${pending.verified ? '–î–ê' : '–ù–ï–¢'}`);
          console.log(`   –°–æ–∑–¥–∞–Ω: ${pending.created_at}`);
          try {
            const userData = JSON.parse(pending.user_data);
            console.log(`   Email: ${userData.email}`);
          } catch (e) {
            console.log(`   User data: ${pending.user_data}`);
          }
        }
        db.close();
      }
    );
  }
); 