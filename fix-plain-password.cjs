const Database = require('better-sqlite3');
const crypto = require('crypto');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–∫ –≤ auth-sqlite.ts
function hashPassword(password) {
  const saltRounds = 10;
  const salt = crypto.randomBytes(16).toString('hex');
  const hash = crypto.pbkdf2Sync(password, salt, 1000, 64, 'sha512').toString('hex');
  return `${salt}:${hash}`;
}

try {
  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  const dbPath = path.join(__dirname, 'db', 'database.sqlite');
  const db = new Database(dbPath);

  console.log('üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–µ—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏...');
  
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const users = db.prepare('SELECT id, email, password FROM users').all();
  
  let fixedCount = 0;
  
  for (const user of users) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º (–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ':')
    if (!user.password.includes(':')) {
      console.log(`üîí –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è ${user.email}`);
      
      // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
      const hashedPassword = hashPassword(user.password);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const result = db.prepare('UPDATE users SET password = ?, updated_at = ? WHERE id = ?')
        .run(hashedPassword, new Date().toISOString(), user.id);
      
      if (result.changes > 0) {
        console.log(`‚úÖ –ü–∞—Ä–æ–ª—å –¥–ª—è ${user.email} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω`);
        fixedCount++;
      } else {
        console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è ${user.email}`);
      }
    }
  }
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
  console.log(`   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
  console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–∞—Ä–æ–ª–µ–π: ${fixedCount}`);
  
  if (fixedCount > 0) {
    console.log('\n‚úÖ –í—Å–µ –ø–∞—Ä–æ–ª–∏ —Ç–µ–ø–µ—Ä—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω—ã!');
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: pm2 restart russkii-portal');
  } else {
    console.log('\n‚úÖ –í—Å–µ –ø–∞—Ä–æ–ª–∏ —É–∂–µ –±—ã–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω—ã');
  }

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  process.exit(1);
} 