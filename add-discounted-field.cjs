const Database = require('better-sqlite3');
const { join } = require('path');

console.log('üè∑Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è "is_discounted" –≤ —Ç–∞–±–ª–∏—Ü—É products...');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const dbPath = join(process.cwd(), 'db', 'database.sqlite');
const db = new Database(dbPath);

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª–µ
  const tableInfo = db.prepare("PRAGMA table_info(products)").all();
  const hasDiscountedField = tableInfo.some(column => column.name === 'is_discounted');
  
  if (hasDiscountedField) {
    console.log('‚úÖ –ü–æ–ª–µ "is_discounted" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ products');
    process.exit(0);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ is_discounted
  console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ "is_discounted" –≤ —Ç–∞–±–ª–∏—Ü—É products...');
  db.exec('ALTER TABLE products ADD COLUMN is_discounted BOOLEAN DEFAULT FALSE');
  
  console.log('‚úÖ –ü–æ–ª–µ "is_discounted" —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!');
  
  // –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –¥–ª—è —Ñ–ª–∞–∂–∫–æ–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
  const flagFields = [
    { name: 'is_hot_deal', sql: 'ALTER TABLE products ADD COLUMN is_hot_deal BOOLEAN DEFAULT FALSE' },
    { name: 'is_bestseller', sql: 'ALTER TABLE products ADD COLUMN is_bestseller BOOLEAN DEFAULT FALSE' },
    { name: 'is_new_arrival', sql: 'ALTER TABLE products ADD COLUMN is_new_arrival BOOLEAN DEFAULT FALSE' },
    { name: 'is_limited_edition', sql: 'ALTER TABLE products ADD COLUMN is_limited_edition BOOLEAN DEFAULT FALSE' }
  ];
  
  for (const field of flagFields) {
    const hasField = tableInfo.some(column => column.name === field.name);
    if (!hasField) {
      console.log(`‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ "${field.name}"...`);
      db.exec(field.sql);
      console.log(`‚úÖ –ü–æ–ª–µ "${field.name}" –¥–æ–±–∞–≤–ª–µ–Ω–æ!`);
    }
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
  console.log('\\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã products:');
  const updatedTableInfo = db.prepare("PRAGMA table_info(products)").all();
  updatedTableInfo.forEach(column => {
    console.log(`  - ${column.name}: ${column.type}`);
  });
  
  console.log('\\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è:', error);
  process.exit(1);
} finally {
  db.close();
} 